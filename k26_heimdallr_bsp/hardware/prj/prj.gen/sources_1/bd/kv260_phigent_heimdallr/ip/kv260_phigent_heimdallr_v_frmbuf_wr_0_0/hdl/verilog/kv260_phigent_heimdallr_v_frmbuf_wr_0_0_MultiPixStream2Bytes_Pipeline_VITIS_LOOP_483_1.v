// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kv260_phigent_heimdallr_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_483_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_empty_n,
        img_read,
        pix_val_V_4_0,
        pix_val_V_3_0,
        pix_val_V_1_0,
        pix_val_V_0_0,
        trunc_ln470_1,
        bytePlanes_01_din,
        bytePlanes_01_full_n,
        bytePlanes_01_write,
        demorgan,
        icmp_ln473,
        icmp_ln488_6,
        icmp_ln488_5,
        icmp_ln488_4,
        icmp_ln488_3,
        icmp_ln488_2,
        icmp_ln488_1,
        sub25_cast38,
        icmp_ln488,
        bytePlanes_12_din,
        bytePlanes_12_full_n,
        bytePlanes_12_write,
        pix_val_V_4_1_out,
        pix_val_V_4_1_out_ap_vld,
        pix_val_V_3_1_out,
        pix_val_V_3_1_out_ap_vld,
        pix_val_V_1_1_out,
        pix_val_V_1_1_out_ap_vld,
        pix_val_V_0_1_out,
        pix_val_V_0_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] img_dout;
input   img_empty_n;
output   img_read;
input  [7:0] pix_val_V_4_0;
input  [7:0] pix_val_V_3_0;
input  [7:0] pix_val_V_1_0;
input  [7:0] pix_val_V_0_0;
input  [11:0] trunc_ln470_1;
output  [127:0] bytePlanes_01_din;
input   bytePlanes_01_full_n;
output   bytePlanes_01_write;
input  [0:0] demorgan;
input  [0:0] icmp_ln473;
input  [0:0] icmp_ln488_6;
input  [0:0] icmp_ln488_5;
input  [0:0] icmp_ln488_4;
input  [0:0] icmp_ln488_3;
input  [0:0] icmp_ln488_2;
input  [0:0] icmp_ln488_1;
input  [11:0] sub25_cast38;
input  [0:0] icmp_ln488;
output  [127:0] bytePlanes_12_din;
input   bytePlanes_12_full_n;
output   bytePlanes_12_write;
output  [7:0] pix_val_V_4_1_out;
output   pix_val_V_4_1_out_ap_vld;
output  [7:0] pix_val_V_3_1_out;
output   pix_val_V_3_1_out_ap_vld;
output  [7:0] pix_val_V_1_1_out;
output   pix_val_V_1_1_out_ap_vld;
output  [7:0] pix_val_V_0_1_out;
output   pix_val_V_0_1_out_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_01_write;
reg bytePlanes_12_write;
reg pix_val_V_4_1_out_ap_vld;
reg pix_val_V_3_1_out_ap_vld;
reg pix_val_V_1_1_out_ap_vld;
reg pix_val_V_0_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln483_reg_1000;
reg   [0:0] or_ln488_1_reg_1024;
reg    ap_predicate_op69_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln488_6_reg_1079;
reg    ap_predicate_op130_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_01_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    img_blk_n;
reg   [0:0] or_ln488_reg_1015;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln488_2_reg_1053;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln488_3_reg_1062;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln488_4_reg_1071;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln488_5_reg_1075;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln488_7_reg_1083;
reg    bytePlanes_12_blk_n;
reg   [7:0] pix_val_V_4_2_reg_264;
reg   [7:0] pix_val_V_3_2_reg_274;
reg   [7:0] pix_val_V_1_2_reg_284;
reg   [7:0] pix_val_V_0_2_reg_294;
reg   [7:0] pix_val_V_4_3_reg_304;
reg   [7:0] pix_val_V_3_3_reg_315;
reg   [7:0] pix_val_V_1_3_reg_326;
reg   [7:0] pix_val_V_0_3_reg_337;
reg   [7:0] pix_val_V_4_4_reg_348;
reg   [7:0] pix_val_V_3_4_reg_359;
reg   [7:0] pix_val_V_1_4_reg_370;
reg   [7:0] pix_val_V_0_4_reg_381;
reg   [7:0] pix_val_V_4_5_reg_392;
reg   [7:0] pix_val_V_3_5_reg_403;
reg   [7:0] pix_val_V_1_5_reg_414;
reg   [7:0] pix_val_V_0_5_reg_425;
reg   [7:0] pix_val_V_4_6_reg_436;
reg   [7:0] pix_val_V_3_6_reg_447;
reg   [7:0] pix_val_V_1_6_reg_458;
reg   [7:0] pix_val_V_0_6_reg_469;
reg   [7:0] pix_val_V_4_7_reg_480;
reg   [7:0] pix_val_V_3_7_reg_491;
reg   [7:0] pix_val_V_1_7_reg_502;
reg   [7:0] pix_val_V_0_7_reg_513;
reg    ap_predicate_op54_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op93_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op108_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op141_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op81_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op119_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] icmp_ln483_fu_723_p2;
reg   [0:0] icmp_ln483_reg_1000_pp0_iter1_reg;
wire   [0:0] cmp26_fu_739_p2;
reg   [0:0] cmp26_reg_1004;
wire   [0:0] or_ln488_fu_745_p2;
wire   [7:0] pix_val_V_0_1_fu_756_p1;
wire   [0:0] or_ln488_1_fu_760_p2;
wire   [7:0] pix_val_V_0_2_149_fu_780_p1;
wire   [0:0] or_ln488_2_fu_784_p2;
wire   [7:0] pix_val_V_0_3_150_fu_788_p1;
wire   [0:0] or_ln488_3_fu_792_p2;
wire   [7:0] pix_val_V_0_4_154_fu_796_p1;
wire   [0:0] or_ln488_4_fu_800_p2;
wire   [0:0] or_ln488_5_fu_804_p2;
wire   [0:0] or_ln488_6_fu_808_p2;
wire   [0:0] or_ln488_7_fu_812_p2;
wire   [7:0] pix_val_V_0_5_158_fu_816_p1;
wire   [7:0] pix_val_V_0_6_162_fu_820_p1;
wire   [7:0] pix_val_V_0_7_166_fu_824_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] pix_val_V_0_8_170_fu_828_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_2_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_2_reg_274;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_2_reg_284;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_2_reg_294;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_3_reg_304;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_3_reg_315;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_3_reg_326;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_3_reg_337;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_4_reg_348;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_4_reg_359;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_4_reg_370;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_4_reg_381;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_5_reg_392;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_5_reg_403;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_5_reg_414;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_5_reg_425;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_6_reg_436;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_6_reg_447;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_6_reg_458;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_6_reg_469;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_7_reg_480;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_4_7_reg_480;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_7_reg_491;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_3_7_reg_491;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_7_reg_502;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_1_7_reg_502;
reg   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_7_reg_513;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_0_7_reg_513;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_8_146_reg_524;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_8_147_reg_534;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_8_148_reg_544;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_8_reg_554;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554;
reg   [7:0] ap_phi_mux_pix_val_V_4_9_phi_fu_567_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_9_reg_564;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_4_9_reg_564;
reg   [7:0] ap_phi_mux_pix_val_V_3_9_phi_fu_577_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_9_reg_574;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_3_9_reg_574;
reg   [7:0] ap_phi_mux_pix_val_V_1_9_phi_fu_587_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_9_reg_584;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_1_9_reg_584;
reg   [7:0] ap_phi_mux_pix_val_V_0_9_phi_fu_597_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_0_9_reg_594;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_0_9_reg_594;
reg   [11:0] x_fu_106;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
wire   [11:0] x_2_fu_729_p2;
reg   [7:0] pix_val_V_0_fu_110;
reg   [7:0] pix_val_V_1_8_fu_114;
reg   [7:0] pix_val_V_3_8_fu_118;
reg   [7:0] pix_val_V_4_8_fu_122;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
wire   [12:0] zext_ln483_fu_735_p1;
wire  signed [12:0] sub25_cast38_cast_fu_691_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_854;
reg    ap_condition_857;
reg    ap_condition_861;
reg    ap_condition_865;
reg    ap_condition_868;
reg    ap_condition_871;
reg    ap_condition_874;
reg    ap_condition_877;
reg    ap_condition_880;
reg    ap_condition_883;
reg    ap_condition_470;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kv260_phigent_heimdallr_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_857)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_2_reg_294 <= pix_val_V_0_fu_110;
        end else if ((1'b1 == ap_condition_854)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_2_reg_294 <= pix_val_V_0_1_fu_756_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_3_reg_337 <= ap_phi_reg_pp0_iter0_pix_val_V_0_2_reg_294;
        end else if ((1'b1 == ap_condition_861)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_3_reg_337 <= pix_val_V_0_2_149_fu_780_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_4_reg_381 <= ap_phi_reg_pp0_iter0_pix_val_V_0_3_reg_337;
        end else if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_4_reg_381 <= pix_val_V_0_3_150_fu_788_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_5_reg_425 <= ap_phi_reg_pp0_iter0_pix_val_V_0_4_reg_381;
        end else if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_5_reg_425 <= pix_val_V_0_4_154_fu_796_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_883)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_6_reg_469 <= ap_phi_reg_pp0_iter0_pix_val_V_0_5_reg_425;
        end else if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_0_6_reg_469 <= pix_val_V_0_5_158_fu_816_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_857)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_2_reg_284 <= pix_val_V_1_8_fu_114;
        end else if ((1'b1 == ap_condition_854)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_2_reg_284 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_3_reg_326 <= ap_phi_reg_pp0_iter0_pix_val_V_1_2_reg_284;
        end else if ((1'b1 == ap_condition_861)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_3_reg_326 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_4_reg_370 <= ap_phi_reg_pp0_iter0_pix_val_V_1_3_reg_326;
        end else if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_4_reg_370 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_5_reg_414 <= ap_phi_reg_pp0_iter0_pix_val_V_1_4_reg_370;
        end else if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_5_reg_414 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_883)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_6_reg_458 <= ap_phi_reg_pp0_iter0_pix_val_V_1_5_reg_414;
        end else if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_1_6_reg_458 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_857)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_2_reg_274 <= pix_val_V_3_8_fu_118;
        end else if ((1'b1 == ap_condition_854)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_2_reg_274 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_3_reg_315 <= ap_phi_reg_pp0_iter0_pix_val_V_3_2_reg_274;
        end else if ((1'b1 == ap_condition_861)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_3_reg_315 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_4_reg_359 <= ap_phi_reg_pp0_iter0_pix_val_V_3_3_reg_315;
        end else if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_4_reg_359 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_5_reg_403 <= ap_phi_reg_pp0_iter0_pix_val_V_3_4_reg_359;
        end else if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_5_reg_403 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_883)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_6_reg_447 <= ap_phi_reg_pp0_iter0_pix_val_V_3_5_reg_403;
        end else if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_3_6_reg_447 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_857)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_2_reg_264 <= pix_val_V_4_8_fu_122;
        end else if ((1'b1 == ap_condition_854)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_2_reg_264 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_3_reg_304 <= ap_phi_reg_pp0_iter0_pix_val_V_4_2_reg_264;
        end else if ((1'b1 == ap_condition_861)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_3_reg_304 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_4_reg_348 <= ap_phi_reg_pp0_iter0_pix_val_V_4_3_reg_304;
        end else if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_4_reg_348 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_5_reg_392 <= ap_phi_reg_pp0_iter0_pix_val_V_4_4_reg_348;
        end else if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_5_reg_392 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_883)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_6_reg_436 <= ap_phi_reg_pp0_iter0_pix_val_V_4_5_reg_392;
        end else if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_pix_val_V_4_6_reg_436 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_470)) begin
        if (((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_5_reg_1075 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_0_7_reg_513 <= ap_phi_reg_pp0_iter0_pix_val_V_0_6_reg_469;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_0_7_reg_513 <= ap_phi_reg_pp0_iter0_pix_val_V_0_7_reg_513;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_1079 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554 <= ap_phi_reg_pp0_iter1_pix_val_V_0_7_reg_513;
    end else if (((or_ln488_6_reg_1079 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554 <= pix_val_V_0_7_166_fu_824_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554 <= ap_phi_reg_pp0_iter0_pix_val_V_0_8_reg_554;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_0_9_reg_594 <= pix_val_V_0_8_170_fu_828_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_0_9_reg_594 <= ap_phi_reg_pp0_iter0_pix_val_V_0_9_reg_594;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_470)) begin
        if (((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_5_reg_1075 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_1_7_reg_502 <= ap_phi_reg_pp0_iter0_pix_val_V_1_6_reg_458;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_1_7_reg_502 <= ap_phi_reg_pp0_iter0_pix_val_V_1_7_reg_502;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_1079 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544 <= ap_phi_reg_pp0_iter1_pix_val_V_1_7_reg_502;
    end else if (((or_ln488_6_reg_1079 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544 <= ap_phi_reg_pp0_iter0_pix_val_V_1_8_148_reg_544;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_9_reg_584 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_9_reg_584 <= ap_phi_reg_pp0_iter0_pix_val_V_1_9_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_470)) begin
        if (((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_5_reg_1075 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_3_7_reg_491 <= ap_phi_reg_pp0_iter0_pix_val_V_3_6_reg_447;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_3_7_reg_491 <= ap_phi_reg_pp0_iter0_pix_val_V_3_7_reg_491;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_1079 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534 <= ap_phi_reg_pp0_iter1_pix_val_V_3_7_reg_491;
    end else if (((or_ln488_6_reg_1079 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534 <= ap_phi_reg_pp0_iter0_pix_val_V_3_8_147_reg_534;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_9_reg_574 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_9_reg_574 <= ap_phi_reg_pp0_iter0_pix_val_V_3_9_reg_574;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_470)) begin
        if (((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_5_reg_1075 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_val_V_4_7_reg_480 <= ap_phi_reg_pp0_iter0_pix_val_V_4_6_reg_436;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_val_V_4_7_reg_480 <= ap_phi_reg_pp0_iter0_pix_val_V_4_7_reg_480;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_1079 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524 <= ap_phi_reg_pp0_iter1_pix_val_V_4_7_reg_480;
    end else if (((or_ln488_6_reg_1079 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524 <= {{img_dout[39:32]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524 <= ap_phi_reg_pp0_iter0_pix_val_V_4_8_146_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_4_9_reg_564 <= {{img_dout[39:32]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_4_9_reg_564 <= ap_phi_reg_pp0_iter0_pix_val_V_4_9_reg_564;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_0_fu_110 <= pix_val_V_0_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_0_fu_110 <= ap_phi_mux_pix_val_V_0_9_phi_fu_597_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_1_8_fu_114 <= pix_val_V_1_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_1_8_fu_114 <= ap_phi_mux_pix_val_V_1_9_phi_fu_587_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_3_8_fu_118 <= pix_val_V_3_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_3_8_fu_118 <= ap_phi_mux_pix_val_V_3_9_phi_fu_577_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_4_8_fu_122 <= pix_val_V_4_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_val_V_4_8_fu_122 <= ap_phi_mux_pix_val_V_4_9_phi_fu_567_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln483_fu_723_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_106 <= x_2_fu_729_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_106 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln488_5_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter0_pix_val_V_0_7_reg_513 <= pix_val_V_0_6_162_fu_820_p1;
        ap_phi_reg_pp0_iter0_pix_val_V_1_7_reg_502 <= {{img_dout[15:8]}};
        ap_phi_reg_pp0_iter0_pix_val_V_3_7_reg_491 <= {{img_dout[31:24]}};
        ap_phi_reg_pp0_iter0_pix_val_V_4_7_reg_480 <= {{img_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp26_reg_1004 <= cmp26_fu_739_p2;
        or_ln488_reg_1015 <= or_ln488_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln483_reg_1000 <= icmp_ln483_fu_723_p2;
        icmp_ln483_reg_1000_pp0_iter1_reg <= icmp_ln483_reg_1000;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln483_reg_1000 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln488_1_reg_1024 <= or_ln488_1_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_1000 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln488_2_reg_1053 <= or_ln488_2_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln483_reg_1000 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln488_3_reg_1062 <= or_ln488_3_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln483_reg_1000 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln488_4_reg_1071 <= or_ln488_4_fu_800_p2;
        or_ln488_5_reg_1075 <= or_ln488_5_fu_804_p2;
        or_ln488_6_reg_1079 <= or_ln488_6_fu_808_p2;
        or_ln488_7_reg_1083 <= or_ln488_7_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        pix_val_V_0_2_reg_294 <= ap_phi_reg_pp0_iter0_pix_val_V_0_2_reg_294;
        pix_val_V_1_2_reg_284 <= ap_phi_reg_pp0_iter0_pix_val_V_1_2_reg_284;
        pix_val_V_3_2_reg_274 <= ap_phi_reg_pp0_iter0_pix_val_V_3_2_reg_274;
        pix_val_V_4_2_reg_264 <= ap_phi_reg_pp0_iter0_pix_val_V_4_2_reg_264;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        pix_val_V_0_3_reg_337 <= ap_phi_reg_pp0_iter0_pix_val_V_0_3_reg_337;
        pix_val_V_1_3_reg_326 <= ap_phi_reg_pp0_iter0_pix_val_V_1_3_reg_326;
        pix_val_V_3_3_reg_315 <= ap_phi_reg_pp0_iter0_pix_val_V_3_3_reg_315;
        pix_val_V_4_3_reg_304 <= ap_phi_reg_pp0_iter0_pix_val_V_4_3_reg_304;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        pix_val_V_0_4_reg_381 <= ap_phi_reg_pp0_iter0_pix_val_V_0_4_reg_381;
        pix_val_V_1_4_reg_370 <= ap_phi_reg_pp0_iter0_pix_val_V_1_4_reg_370;
        pix_val_V_3_4_reg_359 <= ap_phi_reg_pp0_iter0_pix_val_V_3_4_reg_359;
        pix_val_V_4_4_reg_348 <= ap_phi_reg_pp0_iter0_pix_val_V_4_4_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        pix_val_V_0_5_reg_425 <= ap_phi_reg_pp0_iter0_pix_val_V_0_5_reg_425;
        pix_val_V_1_5_reg_414 <= ap_phi_reg_pp0_iter0_pix_val_V_1_5_reg_414;
        pix_val_V_3_5_reg_403 <= ap_phi_reg_pp0_iter0_pix_val_V_3_5_reg_403;
        pix_val_V_4_5_reg_392 <= ap_phi_reg_pp0_iter0_pix_val_V_4_5_reg_392;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        pix_val_V_0_6_reg_469 <= ap_phi_reg_pp0_iter0_pix_val_V_0_6_reg_469;
        pix_val_V_1_6_reg_458 <= ap_phi_reg_pp0_iter0_pix_val_V_1_6_reg_458;
        pix_val_V_3_6_reg_447 <= ap_phi_reg_pp0_iter0_pix_val_V_3_6_reg_447;
        pix_val_V_4_6_reg_436 <= ap_phi_reg_pp0_iter0_pix_val_V_4_6_reg_436;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pix_val_V_0_7_reg_513 <= ap_phi_reg_pp0_iter1_pix_val_V_0_7_reg_513;
        pix_val_V_1_7_reg_502 <= ap_phi_reg_pp0_iter1_pix_val_V_1_7_reg_502;
        pix_val_V_3_7_reg_491 <= ap_phi_reg_pp0_iter1_pix_val_V_3_7_reg_491;
        pix_val_V_4_7_reg_480 <= ap_phi_reg_pp0_iter1_pix_val_V_4_7_reg_480;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln483_reg_1000 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_1000_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_1083 == 1'd0))) begin
        ap_phi_mux_pix_val_V_0_9_phi_fu_597_p4 = ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554;
    end else begin
        ap_phi_mux_pix_val_V_0_9_phi_fu_597_p4 = ap_phi_reg_pp0_iter1_pix_val_V_0_9_reg_594;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_1000_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_1083 == 1'd0))) begin
        ap_phi_mux_pix_val_V_1_9_phi_fu_587_p4 = ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544;
    end else begin
        ap_phi_mux_pix_val_V_1_9_phi_fu_587_p4 = ap_phi_reg_pp0_iter1_pix_val_V_1_9_reg_584;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_1000_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_1083 == 1'd0))) begin
        ap_phi_mux_pix_val_V_3_9_phi_fu_577_p4 = ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534;
    end else begin
        ap_phi_mux_pix_val_V_3_9_phi_fu_577_p4 = ap_phi_reg_pp0_iter1_pix_val_V_3_9_reg_574;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_1000_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_1083 == 1'd0))) begin
        ap_phi_mux_pix_val_V_4_9_phi_fu_567_p4 = ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524;
    end else begin
        ap_phi_mux_pix_val_V_4_9_phi_fu_567_p4 = ap_phi_reg_pp0_iter1_pix_val_V_4_9_reg_564;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_blk_n = bytePlanes_01_full_n;
    end else begin
        bytePlanes_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_write = 1'b1;
    end else begin
        bytePlanes_01_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (demorgan == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_12_blk_n = bytePlanes_12_full_n;
    end else begin
        bytePlanes_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (demorgan == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_12_write = 1'b1;
    end else begin
        bytePlanes_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op130_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln488_5_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_4_reg_1071 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_3_reg_1062 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln488_2_reg_1053 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op69_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln483_reg_1000 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln488_reg_1015 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op130_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op69_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_1000 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_0_1_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_1000 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_1_1_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_1000 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_3_1_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_1000 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pix_val_V_4_1_out_ap_vld = 1'b1;
    end else begin
        pix_val_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_470 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_854 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln488_reg_1015 == 1'd1));
end

always @ (*) begin
    ap_condition_857 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln488_reg_1015 == 1'd0));
end

always @ (*) begin
    ap_condition_861 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln488_1_reg_1024 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_865 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln488_1_reg_1024 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_868 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln488_2_reg_1053 == 1'd1));
end

always @ (*) begin
    ap_condition_871 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_2_reg_1053 == 1'd0));
end

always @ (*) begin
    ap_condition_874 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_3_reg_1062 == 1'd1));
end

always @ (*) begin
    ap_condition_877 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_3_reg_1062 == 1'd0));
end

always @ (*) begin
    ap_condition_880 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_4_reg_1071 == 1'd1));
end

always @ (*) begin
    ap_condition_883 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln488_4_reg_1071 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_pix_val_V_0_8_reg_554 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_0_9_reg_594 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_1_8_148_reg_544 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_1_9_reg_584 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_3_8_147_reg_534 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_3_9_reg_574 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_4_8_146_reg_524 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_4_9_reg_564 = 'bx;

always @ (*) begin
    ap_predicate_op108_read_state6 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_4_reg_1071 == 1'd1));
end

always @ (*) begin
    ap_predicate_op119_read_state7 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_5_reg_1075 == 1'd1));
end

always @ (*) begin
    ap_predicate_op130_read_state8 = ((or_ln488_6_reg_1079 == 1'd1) & (icmp_ln483_reg_1000 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_read_state9 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_7_reg_1083 == 1'd1));
end

always @ (*) begin
    ap_predicate_op54_read_state2 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_reg_1015 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_read_state3 = ((or_ln488_1_reg_1024 == 1'd1) & (icmp_ln483_reg_1000 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_read_state4 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_2_reg_1053 == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_read_state5 = ((icmp_ln483_reg_1000 == 1'd0) & (or_ln488_3_reg_1062 == 1'd1));
end

assign bytePlanes_01_din = {{{{{{{{{{{{{{{{ap_phi_mux_pix_val_V_3_9_phi_fu_577_p4}, {ap_phi_mux_pix_val_V_0_9_phi_fu_597_p4}}, {ap_phi_reg_pp0_iter1_pix_val_V_3_8_147_reg_534}}, {ap_phi_reg_pp0_iter1_pix_val_V_0_8_reg_554}}, {pix_val_V_3_7_reg_491}}, {pix_val_V_0_7_reg_513}}, {pix_val_V_3_6_reg_447}}, {pix_val_V_0_6_reg_469}}, {pix_val_V_3_5_reg_403}}, {pix_val_V_0_5_reg_425}}, {pix_val_V_3_4_reg_359}}, {pix_val_V_0_4_reg_381}}, {pix_val_V_3_3_reg_315}}, {pix_val_V_0_3_reg_337}}, {pix_val_V_3_2_reg_274}}, {pix_val_V_0_2_reg_294}};

assign bytePlanes_12_din = {{{{{{{{{{{{{{{{ap_phi_mux_pix_val_V_4_9_phi_fu_567_p4}, {ap_phi_mux_pix_val_V_1_9_phi_fu_587_p4}}, {ap_phi_reg_pp0_iter1_pix_val_V_4_8_146_reg_524}}, {ap_phi_reg_pp0_iter1_pix_val_V_1_8_148_reg_544}}, {pix_val_V_4_7_reg_480}}, {pix_val_V_1_7_reg_502}}, {pix_val_V_4_6_reg_436}}, {pix_val_V_1_6_reg_458}}, {pix_val_V_4_5_reg_392}}, {pix_val_V_1_5_reg_414}}, {pix_val_V_4_4_reg_348}}, {pix_val_V_1_4_reg_370}}, {pix_val_V_4_3_reg_304}}, {pix_val_V_1_3_reg_326}}, {pix_val_V_4_2_reg_264}}, {pix_val_V_1_2_reg_284}};

assign cmp26_fu_739_p2 = (($signed(zext_ln483_fu_735_p1) < $signed(sub25_cast38_cast_fu_691_p1)) ? 1'b1 : 1'b0);

assign icmp_ln483_fu_723_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln470_1) ? 1'b1 : 1'b0);

assign or_ln488_1_fu_760_p2 = (icmp_ln488_1 | cmp26_reg_1004);

assign or_ln488_2_fu_784_p2 = (icmp_ln488_2 | cmp26_reg_1004);

assign or_ln488_3_fu_792_p2 = (icmp_ln488_3 | cmp26_reg_1004);

assign or_ln488_4_fu_800_p2 = (icmp_ln488_4 | cmp26_reg_1004);

assign or_ln488_5_fu_804_p2 = (icmp_ln488_5 | cmp26_reg_1004);

assign or_ln488_6_fu_808_p2 = (icmp_ln488_6 | cmp26_reg_1004);

assign or_ln488_7_fu_812_p2 = (icmp_ln473 | cmp26_reg_1004);

assign or_ln488_fu_745_p2 = (icmp_ln488 | cmp26_fu_739_p2);

assign pix_val_V_0_1_fu_756_p1 = img_dout[7:0];

assign pix_val_V_0_1_out = pix_val_V_0_fu_110;

assign pix_val_V_0_2_149_fu_780_p1 = img_dout[7:0];

assign pix_val_V_0_3_150_fu_788_p1 = img_dout[7:0];

assign pix_val_V_0_4_154_fu_796_p1 = img_dout[7:0];

assign pix_val_V_0_5_158_fu_816_p1 = img_dout[7:0];

assign pix_val_V_0_6_162_fu_820_p1 = img_dout[7:0];

assign pix_val_V_0_7_166_fu_824_p1 = img_dout[7:0];

assign pix_val_V_0_8_170_fu_828_p1 = img_dout[7:0];

assign pix_val_V_1_1_out = pix_val_V_1_8_fu_114;

assign pix_val_V_3_1_out = pix_val_V_3_8_fu_118;

assign pix_val_V_4_1_out = pix_val_V_4_8_fu_122;

assign sub25_cast38_cast_fu_691_p1 = $signed(sub25_cast38);

assign x_2_fu_729_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln483_fu_735_p1 = ap_sig_allocacmp_x_1;

endmodule //kv260_phigent_heimdallr_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_483_1
